<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>