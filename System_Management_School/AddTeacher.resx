<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qNX6D/uaDymqSZNgAAAAAElFTkSuQmCC
</value>
  </data>
</root>