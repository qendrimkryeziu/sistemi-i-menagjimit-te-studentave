<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>