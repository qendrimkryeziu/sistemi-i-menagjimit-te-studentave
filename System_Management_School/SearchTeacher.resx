<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAA7EAAAOxAfWD7UkAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAb1klEQVR4Xu2dB1QU1/fHiS3RqD9jiRGNKf+oSTQqgopUYzSxYOzRYIwSK2ABC3WFBUXpCoiKBQRE
        ShKNjWg0McaKLSYqxt6jRimyVBHu/73Z2WVn926vIPecz/HgzLx5737vvj4zZnXRwC6rMwzcNhQcMhaA
        Y0Y4OKangn3GIfL3ZcJNQj4LsIj+pscuM+fSa+i1NA2aFkmTTb7eTMnAJuVNsM8cBw6ZMeCQfpwIVkgQ
        CatraNrHCKsJY8E+qx2bjXozlMHAQ43APv0z8iuNJSLkEjChDEU14ZIw+LYNonljs1lvujRGdMfMkUT0
        FOLwPAkBTA2at2Swy3CCCVkN2ezXm6ZGqvS3Cd5E+NtSjq4FZP5LCIWBWR+wxak3VY382j8lTtxHoFUs
        4txaBS1DNukvOLLFqzfMwIzfgDhqLPnF50g4r65xgnRYR4MZvMIWu96ogWPWAOIc2rvGnFb3cMw4Q2s5
        tvgvr5Fq8WPijN2ok14OdhE+Yt3x8hgMTHqNVPV8UvgKCWe8rFQKO4tJr7HuqdsGjun2pNB0Rg5zxsuL
        fcZ1GJg5mHVT3TPhrz4jjlAXevb6gvgmMwaGZb/Kuq1uGNhmdSOF+1OqsPXIwzHjIgzM6MG6r3YbqfKn
        kEIVyxSyHmUISD/JmXVj7TM61mU7eljh6lEZ0iSY8Ruwbq0dBgOzmpNqbAdeoHo0YC/039qSda9pG10i
        JRk+J1WAerSFTh4N3NaWdbNpGvnlv0Uye0Em8/XoisswKKsj627TMhiU9g7J4DWpDJsM5Q5p8Kd9PPxo
        HwaxdoGw3M4XeHbeMMtqJiztuwBi+vvAjgEhkGsbDy8ctqFpmAg3wS7tfdbtpmE0KknGbkll1OjkOyRD
        pn0ozLSbB/1sJ0MfW2cZPuj9hQw9LZxgqpULpFsHQb59Mpq2kbkJtunmrPuNa/DZ9jYkQ5ekMmhUbjts
        giA7H7C2/QYVXRIsACTpSphpNQP+sl2D3sto0LmCAVmtWRmMY2C5uxnJjMms4gnsUyHc3l/urx0DEx2j
        S++h4NHXFR7bJ6L3Ng7pOXTExcphWBOu32fuwTNmeM6Q9n2E3XRUZEVgYiuiF2keMgcEo3kwDpk7jTJP
        QG6+UjYzxoF27PqqUN1jYCKrwqK+bkzHEsuPwXHMDGZlMYyRm44lmMSiTrT9UlRYVcHEVRVny6kgcEhF
        82Vg6CLSV6w8+jVmE4eJzO1H22knPgUTVh2+JkFgIjWBAAZu+5CVST9GlynJjUxiVW+b/QpUUHXBRFWX
        BX3nQLVDOppPA3MWumc1YeXSvZFqJgK5qcE5bb9G4zZfGkxQTUiz5qN5NQIrWbl0a8yTLw4ZVVI3MzjF
        DlthuK36vX15YGJqQo/ew+GW3QY0zwamSudb0Jmq3zHjH+RmBifEzg8VUlMwMTVljtVMNM9G4KpO9xia
        yrr+NfsNYIWIqA2YkNpw2iYGzbvBccwIYOXTzuijTSTBMpkbGAEPu4WoiNqAiagNrlaz0LwbgXK6FY+V
        UXODLnFnkcQNznWHjWCpxhSvqmAiakO33kPhnt1GtAwGp+uaM6yMmhmYh7uD2WKA3pvwGxgQunyLCagt
        mIjasqG/P1oGg2KRCPDKEoCOYR6snOobNA8oYgLg9aUA9sYb55Y6pIGt7RRUQG3BBNSW8ZbfoOUwGFSr
        5gHAaNd8qUCjtQLoELaCSUDE/xmvc3PAfhUqni7ABNQWuoRs1Cni91fX6EYxDw9iZVXdoBmvmJNIQ2+A
        vsbZHOFntwQVTxdgAuqC4zar0LLoHapRQy9uADQPELCyqmZgHjWfk4CIFqRaMXBTQKdYB9tOQ8XTBZh4
        umCjNQ8tj16h2rQIlNWN0jFyDiuvcoOW/EdoIpROkfjN9QTd3YMJpysw8bpZfAGf9BuOHlMVXr/5aHn0
        SscIXDNKy6AHrLyKDTpHDkETEEN6lj0MN+W5yz4CFU5XSAvXlYi/zW82/BToKnNMHaZZfYeWR2/0SBBq
        g2rG8k6U8ncSQLuQ4+jFkjT2AehnmP7AKh0s+SpCUrQeVkNhR4AbFKf5M/hOm8I5rg4jLCeh5dELtN2n
        mmBaSdJ2+RFWZtzIcKERNPF9gV4sTTPSxtnofx18oR5m/yQRCebgOBJORCwQi095ttUf3CZN4girKnZ9
        xqDl0Tk2WwGaEi0wjaRp4vMCuvPlLxdDx3AeeqE8/hek907hV3ZzUOF0RRdS5XtOdoZHiT4c8SWDIHjG
        t6jIiqB7B7Hy6BTq+1bBuDbyMA/3YuWWNZLYLfQiRbwVRjKjvyD41tYdFU4XTJ7oBruC5qHCS7Mn2B3s
        HEaiYmN07z0cLY/uID5vvxLXRBGtgq+zcnMNzPnNoJFXNXqRMmjvE82kdlQPSYM945aj4mmKpd1kmDll
        HhxOWAVlv6YScXkyYsvjSZIPrPWcAQ4qBEIPi2FQ6RwH1YNJFY2UTTuI+ObhuBbKaORdDe8iS8XQMWwR
        eoGq6DIIHDPguWcMFCcvZRx/cIUnuH49A/raa7YLyMrOGSaNnwPrAwLh1o8bGOFFqBMAImizcDh0ASyb
        ORXGDhsLvZAho+uYsVAU6waC6HlQMZvUkqRMaFk14W0yFMc0UBXzqPms7DUGbZadQ09Wh066CYLygEjE
        8Tx4uGszfB+xEoIX+DDVt/2gb2XE7ucwGZxGTId5Lh4Q7c2Dn2Mj4PHuRI7okmgSABi3N3jBxbhFcDJs
        HlxZMYsRX5KyhTp6lkBb8Sltlp9mZa8xeM2/Aj1ZXWjVpEXH8MWUjaiDKWUHk2UELDmYwgh8/6dNULBP
        9rgydBUAIgRJXjLii6ictBYts0pQn2pa7UtDtGZlFxq8G/eh0kkEdWizHMBOsydsy0JDUcdSyg5sQUXU
        Bp0HQOISVHxKqZ+G08O2xJfUp5ivNYJo3TnyY1Z+EgBvhUfgJ2oBnZO2Vn9FrGRTIOpYSun+zaiI2qDr
        ACjevBgVnyII90DLrBDqQ7oGg/lYGzqE1uwehrYhZ9GTtOU1f4A+m/GCyUFRAJTt43bgFJH/cxKcSlwF
        lzPWosdFKAqA6+uWwOloTyhI8UOPYwg2LULFpwgiFqBllosF8d1rfrhvtaVNyClWfhIAzQME6Em6oIEX
        wAexeAERSmOWo46llO5VLKaIg/HhYGnzpbhHPufbmVC4n9t8lO7bAv9F8eHxisUgkBI4P9kP5jsLJ4no
        9TZ2TnAkjDtLKA/BBk9UfEpJkDdaZllIe0/3X9AdPZhPdUHzgGdC8elTvg01HP+rQ5sQlaaOK5asRh1L
        KdkZzRERI58Ia2EtO06P8fXinFeQvAru+3oy5Md6c+4TO/87mestrUdAXoov5zwMwdr5qPiUcrdQtMwc
        bImP2q3AfahLGnlXCwOgY5Q1eoI+oNXZJ4pXEquckqE4Fa+WS35YyRER43BChIx4lEnjpnDOK0iKEgdA
        Xgw3ACY4jUPToGN/yfMwiuLcUfGLVs+FqmFb0DKLoaus+qryMczD+6g//68L2pHaYID8GbKKxXJqgQw+
        R0SM86mxqHizvpnBOY8TALFenPu4jPsKTePcak/OeTKk+uLiE8pdFfz6ac3YIQz3lT4xD/M2gzdDtqMH
        9Q1dvuwWTxyAzBk4ZkB5cDjiZB6U/ZLEERJj6qRpHOE+tBwGRzdGcs7hBgC3BjgYMo/ZFCKZxuQvx3PO
        wZA3BCxdQkZE8mYCqQ9UWcrVB2+Gfm9GZ4XQg4aC7jj+aJ2sYxzT4fm8NVCSJJwOFlGyO44jJAbtB4Qt
        WgSjRzrDtIku8McGrviUgqRIuTUAZd/yuYzow4aMBv6Mqcw6gPQ50hSt9+AIL4iaDxUzIpmyyJSPNoWi
        nbvGok3ISTNoFaT+CqA+eCMYHTJWf54GlbPWQXkgETE0FMoSlHcEVaEgUTIAuDWARqSS4AwgIxU/Mlxd
        FAzPp66G6sHIPAjdr6/uEq6+aBV8wwxaBBagB41FSz5A9/XEWXKmkz9Nh7JsXFR1UFYDqAsNTjS/Inpt
        BGi9jJRRj0M7dWnBz6NrAOXoQWPzOqkeu61Bp5SfR6ahoqqDYPt6eOC/kOAJzzYrH94po3IG0ozRvNMy
        0LJgZTQ2Tf3LzZhtQthBU4FOJNFRA60V2EWm6vGkFjiIC4uybyMzhCyV6j+U7N0MRVu4QgoSF4NgPRnu
        pShv80WUbCCdPFIziYWnv3baq6fPUmBlMhWa+FaaQSOfKvSgKdLEF8iwlXlWsWLjVo6YiijZXjOiKM1e
        xzkmORUs2FKzkidI8BD/vzKee8QIn5+keaN5xPJuijT2qTIjUar/WUA9UDVgGUdIRZT+nECEYoXethRK
        96wh/5/CHBP9PzOEi6vpwRdvUbFjuIUH1W/UItElaehVbabX+WY9UxHF/TUronRXDEe4ksxgKN0RCYIN
        C6Eofp5YeObXv2kR51xFVIwz0hheFxDta3UAVL9Let/7hb9kVaB9AOnVP0nhaQ0g2Ky6+KXRfqQaxfNW
        K2ACgHaysIN6JL+xJ5xoNQ/SzF0h7p1ZEP7+LIgl/yZ1mg0/t3OH20090OswKp3DUbHlUbp/E5TsiIDi
        dOEEk1B4d2YVr1iFxR4xKf7wolvt/fEwNKABQHeJYgd1TF7jhZDccQ5802saWErt48MY9dE44L39NZx9
        3Q1NTwyJ4uc85bODKAe2QHGq6mv9klR+ZuI9fFVoRPsAjX31Ogqgwoe9PxOsB6j+ehcLQrdeQ8Xz8OO6
        joHjzeeg6TO8ugQqIlTvD0gi3SSoQsWEWtzuS9LE54UZNOWVoQd1wI72buDYX/33+vS0nsBZiBGx4N2J
        UNjQE70XNCI1QaD6NYFaAbCVDPlG1IFfvoimvFIzaBGQjx7UgvIGi4DXdQYqrgjHYTNhlmc4eC9LAH5k
        MvCjUsDdKxpGTloEPazHogFAse/uBLlN3dH70ubgxdgwtTqGqgZAyXrS5lsYvr+kV5ip4FZBd9GDGlLa
        cBG4dndBRbcZ/B0ERmyBP/66ATcLyuBWYTlK/NErMDcuCz6dOB8Ngl49h0FOc1f0/pS8LYehKCcbFVwa
        ZQEg2MaDS9lpcGT1r+i9ajVEe908EMJS+cpiVHwr+8nML/zig3xUcEmu5pXB5tw8Mb5bD4DFoK/RIPi7
        mWwHUeCcJk7r3zu34FnOz6jwIuQFwLP0AMjNToUfzl0V5+XquFSZ+9Vq2obkmEH7lVnoQQ2gnT1p8YeM
        cofdf5zniKyIEw+LOQFAiT9zF5xmBcgEAW0O8hqxQ0bzYICVv8FDpGa5+zgPnlw6DSX7N0LZQe7mUMkA
        EKT6wrNkPzhy6BdIufCvTD62/5MP+YG/wIsOJrKcqy3tQ9N1tiXsyBtzZYZ3Q0bNhZwr92UEUUT2rWcy
        jqdsvPgExnmslAkC955TAFLOAFS8AGqF5S/QdCkPrl8WCp4eCCVZwVDyfQgUrZsPRfFz2b187rD3jxPo
        /SmH7wuYdG7/VwJP1p+E592MsI1LlxDtzaBz1GfoQTWoIJ2+kZbc9/gNHD4bjl28LSOCMraSXxnmfMqm
        S0/hS1e+TBD8dvgkIz6151XVaLoinh7bIf7FUyRnAs9tT0bvK+LS01JueuTvp6uPQNUbJrrcq4yOsdbC
        t4JouS08vYMrR3zKtr1Huc5SgYtPSlHHS7L2zD2wHDyZEwAjJsyGKiK8yO4XVaDpU27nCeDZT9EyAfBw
        Ew+SLzxE70nZdlV+/+Xu1adQPCYZ9Y3JwkwAsi+QhOYBhehJKlBFOn7Sv/7ZC8NRRynjjwcC1PnSLM06
        zAkAytETZ1n5AfLKKtH0RdwjnUMB6eSJAuAZqf53Hj+L3kvEgTtFaFqSPEnIgepmBtzWrQ2iB0OoaTMS
        OPW/eRzxKUcv3EIdpIydNwtR52M4jHfnBMAC7xWs/ABllVVo+pI8PrVPHAA5uzPRe0jy539S1b8cHhy7
        DZXvGuDBDm2RfEQc3gqNRU9SgXCpnr/zzADUMcq4WVAOWy7Lb/+lWZy4lxMAvW3HwPPnlWwIANx5Jr8Z
        YCgohYK98XA3cRkkXXyM3kNECumX3CD5Q9NBoE1CRc9o1F8mg3lYOCs/CYDOkR9rullxUm/uSxo2ZvyC
        OkUZ9BeGOV8e688/gm5WIzhBcPb8JVZ+gCclipsBysXcfyD1t1No+pLsJSMT7HpF3LlbCOXWsajPTIJO
        ET1Z+YWmyeZQOuVrZVMjPuWPv2+iDlHGr/dUa/8lcZwwlxMAqRm7WPkBip8rbgZ++CWHmaPo5fgVeG7Y
        iaYvIudhMZqGMu7cK4SKXiZYEzTllbGy1xi0Xv4XerIC6Lq9pPh9HafAtSeaOev76wWo8xXh7BfDCYCV
        URtY+QHooOA2cp9zNx8zaw6iPIuuHTrNG1YduSJzj8TLeXAtX/60tTJoc2ByfQL0FTHm4V7oyQr4s+V8
        TgCMmOCJOkEZ1MGJUo5XBZdlGzgBsIQXwcovtEfFzzn32Zx1AGyHcL84Jnn9R/1GwpyIFE5ett8o5KSh
        CbRjWN3UhPYNmocuZmWvMU1eE3daagQwfLwH6gBl5DySnf5VhVnhyRwBF/qFsdIL7VmFcFaQzgvQkcFi
        P9nvDkheT5k2nw/nSX8k86qwRjrCzv5py5O1J1AfGhyqcbt4/Ivj0Cr4JnqRHP5qwa0BBo90QwuvjH13
        8OlfZUxfmcgRzzswipVeaJWkHSgofwGiKaKfDxzj5JcieT0l8UdhJ5aOSg7dK4LcPM2rf2lKRiahfjQo
        rYOvsHLLGnQMW4peJIf7r3lynNn/06ka9QG2XVF9+CfJ6LnLOOJFx29hpcattKwcDvx2ElzmBMHAYXMY
        evafAJ/0Hw9OEz0g+adf4fIj7at8edy98hSqWi1FfWkwOoT5snLLmvBl0ao/KURnAW2ktnrtP5mLFl4e
        uU+5y7/qYDdmDicAfvhpPyu1YpvuFgJfjFrA0If9EpnTxIVo/nTN04jDqC8NAt3+h70lVNKgTcgJ9GI5
        fNuT+zWP1Zt3oAWXx9EHmrX/sSdvQVdL7jzAtRt3WIkV2+iJXhIBIMy3zSAXNH+65vaTEnj+vgbv+NUF
        7UIUvy6eGv2oAHqxHNZ2ns0JgNGTvRTu9pFm903N2v9ZEdwO4IDBX3MWhOSZoLhULL5kAFAu3M9D86hr
        /tuYg/pS77wd6cDKrNigJf8hmgDClde5cwGU7b+eRgsuzU0CnWbFBFYE3RvQfzj3RU78lWtYiRXbrdv/
        yg2A389fQ/Opc/JKobKzLl/8qAJEU1Ze5QYdIz3RROQwpRe3GZj4HQ+u55XghZeADrcwgZXhGp3GEZ9y
        +coNVmLFdurMJbkB8OOBU2g+9UE+/xfUl3rDPNKNlVc1g2ZLuZ+NU8ChNnM5jqSEr81ECy4JHWZhAiuC
        ztZ9PGAUR3wXNz9WXuWWvf+43ABISN+H5lMf3L2RD9WNDbTFXN3PxlED8zA+mhhCNcHlE24tYOUwBXb+
        fg4tvIgf1Jz+pZtBpHv+3foMg3+u3mLlVW7JadlyA2BFXDqaT31ROmg96k+dQ7d+aWIyH49UwI1mHjJP
        /9B5AbroghX+Ouko0nl2TGiMtWfvy+wBoETEJLLSqmZRsdvkBsCiwHg0r/riacxR1Jc6pXlAESun+qbu
        +sCPb7lxHEqhC0RxybvhRj53Q8WZRyWo0BjL95yGfsOmyog/fsoCzh4AVcwnIF5uAExzW8bJo7659/cj
        1I86RZuPR1NT+BFJhOj3ZnGcKuIrF384cOqyuPD77ypv/+lYfwr5VUqP9ymfjXSBp3kFrKyqm+QkkHQA
        GGoySJLKTvTFUbgvtaZV0B1WRs2NmRdooPpmEdofiHhP9vkAEROm+cM60g7H/Z7L7PKVFj3+9F3mYZDx
        nqHwYV8nGeEpQ0ZPh4ePnrCSqmeSk0DSATBg0DRUJH1SPC4F9aPW0I2+nSMtWRm1M2i3XK3ZQUpGB1e5
        TwRb2Ai/xfeR9SiwH+sKn05awHTuaDXfpU/NU8EY0915UFhYxMqpngkEJRzxpQOAcuHeU1QofVHgm436
        T2veDPmJlU97gw9iW2qyY+if1xfA5F5TZZz8SX/8ZcyK6GU7GlLSd6o02yfPpCeBsAAw2GQQy39Jp1Hf
        aQV94tuc34yVTzcm/KK4+vsGqwh72rvD6K9qvgDavf8YVGQMKvyKqASN2ntpO3U2V2kAyBu16It/D91A
        /aYV6nwpXB3TdPt4RY8oZn0g+9gF4IUngt2o2dDFQn5Vb+kwDtwWBjGreyUlpax82tve/cdkAoB+R1Ay
        AAw5GUS599dD1Gcao8qCj6bGNAXNeKXojRVQuGi3uMAX2Kd/6KTOiuwzsH/P75C94yDs2/kr5Bw6Dfdz
        bwOQIaM+yEjNhnHOPhzsPp8BDl/UEJXwA9wpLIM75Pw7twv0zr0LOhwK0gd8lC33amvQKXw46WHiGZDD
        w31XxAFAH7AU9fh3/ZiLnl+PBjT2qdJZr1+ZgXlYqKr9AboDhj5EKQqAHTdqnv457bEHvaYeDegQ7sfK
        Yxgjbc1xNCNSXP1yPZy+9i8j/g3SD0jKrVn+vW8Tj15Tj5q0DTnKymI4Y7aPtQxSum/Ae0ow07mis2xL
        VmwEn60HYN3ZB5D0939QaUpbpWsrzBff2ad8DW3QKbo16Xg8QzNGqH5lCXw2fI64h93LVvj2ry59hoOL
        SxB6TT1q0IKfRzvmrBzGMXg/pgv9Fi2WwT8tuZ9+79qnZk7fe6S/zPn1qAHdr/He6vasDMY1eDuyL7zq
        91w6k7Ffh4rFt7Dhvuhpr1Ug59x61ID6+u2IHqz7TcOwIHCe6CUOgJ79x4vF/9DKCYqb1aEXLhoSWtvS
        V7uYojFBwK4Z5LflgZX9N+IA+Miq5lOuw0Yqef9vPTh0g867cR+y7jZNg3ci3qMdwx1OYWLxKV37DBMH
        AO9LHl7AeuRDO3zvJHRg3WzaBuYJbcOmRxaJxO9tM1EsPmW/BR8vZD04dKin69U9fRufz28wzz82m74l
        tEf/mnf/0kewS1+tb/9Vpm3IUaON83Vh3ssSovt9/m25KACcRsp50XM9XOjcvqGnd/Vl3/Bihlo7fVdC
        AyDgy4Ba+ZEqg0JX9Qy1sGMom8zf2nL4DP8zv1sE157P1BmcJfTroudrXXuvjoF5uLsm28vqPHQbl752
        8piaMa+jabcyW53dxnUWureibcjvcl/bUpeNtHND1H3uoE7RKugOmEdZsO54eY1WfUzHB3NSXaR5QJHW
        T+zURQPziEB1nkesdTQPEND3MLHFrTd5Bh1DZ0Mr/r3a/FVTDnTjDOn8ssWrN1UN3omyYd5Z1MTXtD9x
        j0FftkVn8VR9LUu9yTdm+xl9MKV18GV1X2ZpUGjeWgdfoTN4et+e/bIa82yCeehipmZoxitBhTAkTf3L
        6bt3mUfpX8ahnLGNro9Dh7BVJCBOQovAPL1+C5k+cUv3QLYNOUvft29yu3LqTWh0xwzz1tP2K1Ppo1LQ
        Kvg6CY4CZraN7lqiCy2STQkVlv5N+xr0HPo1VTpGbxuSQz+txnxZjfRH2OTrkJmZ/T+kqrvmlee1kwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>